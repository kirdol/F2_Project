
```{r setup, message=FALSE}
# run the setup.R script to load the packages
source(here::here("scripts", "setup.R"))

# Load the packages
data <- read.csv(here("data", "data_export_20240424.csv"), sep = ";")

# replace the NA with 0
data <- data %>%
  mutate_all(~ ifelse(. == "Not Available",0, .))

# Convert the 'Month' column to a date type
data$Month <- as.Date(data$Month, format = "%d.%m.%y")

# Check for non-numeric columns
non_numeric_cols <- sapply(data, function(x) !is.numeric(x))
names(data)[non_numeric_cols]

# Transform the non-numeric columns to numeric
data <- data %>%
  mutate_all(as.numeric)

# Convert the data frame to a tsibble
data_tsibble <- as_tsibble(data, index = Month)

# Check the class of the data
sapply(data, class)
# We have only "numeric" class
```

## ARIMA Model
```{r ARIMA Model}
# Fit ARIMA models for all the type of production
arima_model_coal <- auto.arima(data_tsibble$Coal_Production)
arima_model_natural_gas_dry <- auto.arima(data_tsibble$Natural_Gas_Dry_Production)
arima_model_crude_oil <- auto.arima(data_tsibble$Crude_Oil_Production)
arima_model_natural_gas_plant_liquids <- auto.arima(data_tsibble$Natural_Gas_Plant_Liquids_Production)
arima_model_total_fossil_fuels <- auto.arima(data_tsibble$Total_Fossil_Fuels_Production)
arima_model_nuclear_electric_power <- auto.arima(data_tsibble$Nuclear_Electric_Power_Production)
arima_model_hydroelectric_power <- auto.arima(data_tsibble$Hydroelectric_Power_Production)
arima_model_geothermal_energy <- auto.arima(data_tsibble$Geothermal_Energy_Production)
arima_model_solar_energy <- auto.arima(data_tsibble$Solar_Energy_Production)
arima_model_wind_energy <- auto.arima(data_tsibble$Wind_Energy_Production)
arima_model_biomass_energy <- auto.arima(data_tsibble$Biomass_Energy_Production)
arima_model_total_renewable_energy <- auto.arima(data_tsibble$Total_Renewable_Energy_Production)
arima_model_total_primary_energy <- auto.arima(data_tsibble$Total_Primary_Energy_Production)

# Forecast using the ARIMA model
forecast_result_coal <- forecast(arima_model_coal, h = 24)
forecast_result_natural_gas_dry <- forecast(arima_model_natural_gas_dry, h = 24)
forecast_result_crude_oil <- forecast(arima_model_crude_oil, h = 24)
forecast_result_natural_gas_plant_liquids <- forecast(arima_model_natural_gas_plant_liquids, h = 24)
forecast_result_total_fossil_fuels <- forecast(arima_model_total_fossil_fuels, h = 24)
forecast_result_nuclear_electric_power <- forecast(arima_model_nuclear_electric_power, h = 24)
forecast_result_hydroelectric_power <- forecast(arima_model_hydroelectric_power, h = 24)
forecast_result_geothermal_energy <- forecast(arima_model_geothermal_energy, h = 24)
forecast_result_solar_energy <- forecast(arima_model_solar_energy, h = 24)
forecast_result_wind_energy <- forecast(arima_model_wind_energy, h = 24)
forecast_result_biomass_energy <- forecast(arima_model_biomass_energy, h = 24)
forecast_result_total_renewable_energy <- forecast(arima_model_total_renewable_energy, h = 24)
forecast_result_total_primary_energy <- forecast(arima_model_total_primary_energy, h = 24)


# Plot the forecast
p_coal <- autoplot(forecast_result_coal) +
  labs(title = "ARIMA Forecast of Coal Production",
       y = "Coal Production",
       x = "Time")
p_natural_gas_dry <- autoplot(forecast_result_natural_gas_dry) +
  labs(title = "ARIMA Forecast of Natural Gas Dry Production",
       y = "Natural Gas Dry Production",
       x = "Time")
p_crude_oil <- autoplot(forecast_result_crude_oil) +
  labs(title = "ARIMA Forecast of Crude Oil Production",
       y = "Crude Oil Production",
       x = "Time")
p_natural_gas_plant_liquids <- autoplot(forecast_result_natural_gas_plant_liquids) +
  labs(title = "ARIMA Forecast of Natural Gas Plant Liquids Production",
       y = "Natural Gas Plant Liquids Production",
       x = "Time")
p_total_fossil_fuels <- autoplot(forecast_result_total_fossil_fuels) +
  labs(title = "ARIMA Forecast of Total Fossil Fuels Production",
       y = "Total Fossil Fuels Production",
       x = "Time")
p_nuclear_electric_power <- autoplot(forecast_result_nuclear_electric_power) +
  labs(title = "ARIMA Forecast of Nuclear Electric Power Production",
       y = "Nuclear Electric Power Production",
       x = "Time")
p_hydroelectric_power <- autoplot(forecast_result_hydroelectric_power) +
  labs(title = "ARIMA Forecast of Hydroelectric Power Production",
       y = "Hydroelectric Power Production",
       x = "Time")
p_geothermal_energy <- autoplot(forecast_result_geothermal_energy) +
  labs(title = "ARIMA Forecast of Geothermal Energy Production",
       y = "Geothermal Energy Production",
       x = "Time")
p_solar_energy <- autoplot(forecast_result_solar_energy) +
  labs(title = "ARIMA Forecast of Solar Energy Production",
       y = "Solar Energy Production",
       x = "Time")
p_wind_energy <- autoplot(forecast_result_wind_energy) +
  labs(title = "ARIMA Forecast of Wind Energy Production",
       y = "Wind Energy Production",
       x = "Time")
p_biomass_energy <- autoplot(forecast_result_biomass_energy) +
  labs(title = "ARIMA Forecast of Biomass Energy Production",
       y = "Biomass Energy Production",
       x = "Time")
p_total_renewable_energy <- autoplot(forecast_result_total_renewable_energy) +
  labs(title = "ARIMA Forecast of Total Renewable Energy Production",
       y = "Total Renewable Energy Production",
       x = "Time")
p_total_primary_energy <- autoplot(forecast_result_total_primary_energy) +
  labs(title = "ARIMA Forecast of Total Primary Energy Production",
       y = "Total Primary Energy Production",
       x = "Time")

final_plot <- p_coal + p_natural_gas_dry + p_crude_oil + p_natural_gas_plant_liquids +
              p_total_fossil_fuels + p_nuclear_electric_power + p_hydroelectric_power +
              p_geothermal_energy + p_solar_energy + p_wind_energy + p_biomass_energy +
              p_total_renewable_energy + p_total_primary_energy +
              plot_layout(guides = 'collect') & 
              theme(legend.position = "bottom")

# Affichage du rÃ©sultat
print(final_plot)
```

```{r}
models <- list(
  Coal = auto.arima(data_tsibble$Coal_Production),
  Natural_Gas_Dry = auto.arima(data_tsibble$Natural_Gas_Dry_Production),
  Crude_Oil = auto.arima(data_tsibble$Crude_Oil_Production),
  Natural_Gas_Liquids = auto.arima(data_tsibble$Natural_Gas_Plant_Liquids_Production),
  Total_Fossil_Fuels = auto.arima(data_tsibble$Total_Fossil_Fuels_Production),
  Nuclear_Power = auto.arima(data_tsibble$Nuclear_Electric_Power_Production),
  Hydroelectric_Power = auto.arima(data_tsibble$Hydroelectric_Power_Production),
  Geothermal_Energy = auto.arima(data_tsibble$Geothermal_Energy_Production),
  Solar_Energy = auto.arima(data_tsibble$Solar_Energy_Production),
  Wind_Energy = auto.arima(data_tsibble$Wind_Energy_Production),
  Biomass_Energy = auto.arima(data_tsibble$Biomass_Energy_Production),
  Total_Renewable_Energy = auto.arima(data_tsibble$Total_Renewable_Energy_Production),
  Total_Primary_Energy = auto.arima(data_tsibble$Total_Primary_Energy_Production)
)

# Manually extract model details
model_details <- map(models, function(model) {
  data.frame(
    Model = names(model),
    ARIMA_Order = paste(model$arma[1], model$arma[2], model$arma[3], sep=","),
    Seasonal_Order = paste(model$arma[4], model$arma[5], model$arma[6], sep=","),
    AIC = model$aic
  )
})

# Combine into a single data frame
model_details_df <- bind_rows(model_details)

# View the results
print(model_details_df)

# Create a nicer table view
kable(model_details_df)
```

